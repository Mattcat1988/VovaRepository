Объект - набор свойств "имя:значение"
console.dir() отображает свой свойства объекта
скобки это вызов метода
console.table() отображение свойств объекта в табличном виде
console это объект
выражение всегда возвращает значение
выражение с побочными действиями не только возвращает. но и выполняет другие действия
============переменные===========

Имена переменных
PascalCase типы и классы
DB_PASSWORD значения известны до запуска приложения и не меняются
camelCase Все остальные переменные

Объявление переменных
let const var
let a // объявление
const c = 10 объявление и присваивание
a = true Присваивание
let можно переписать
const присваивается сразу и не меняется
let myName

// console.log(myName)

myName = 'Vova'

console.log(myName)

console.log(console.log(10))

const myName = 'Vova'
// myName = ''
console.log(myName)
======Тип переменной
тип переменной определяется типом присвоенного значения
примитивные типа string(строка) boolean(logic(true false)) number(число) null undefined symbol(символ)
ссылочный тип object (объект)

const objectA = {
    a: 10,
    b: true
}
console.table(objectA)
добавление свойств объекта
const objectA = {
    a: 10,
    b: true

}
console.table(objectA)

const copyOfA = objectA  // ссылка на объект
console.table(copyOfA)
copyOfA.a = 20
copyOfA.b = false
copyOfA.c = 'Putin'
console.table(copyOfA)

========Динамическая типизация
function a() {
    console.log('Hello There')

}
a()
вызов функции
const для объявления функции
const a = () => {
    console.log('Hello There')
}
a()
a = 10
a() //error нельзя присвоить новое значение
Правила работы с переменными
1. Все переменные объявлять перерд их использованием
2. Стараться использовать const везде, где это возможно
=====Объекты======
Практически все сущности в javascript объекты
объект- набор свойств имя и значение
Изменение значений свойств:
const myCity = {
    city: 'New York'
}
console.log(myCity)
myCity.city = 'Las Vegas'
console.log(myCity)
Добавление новых свойств
const myCity = {
    city: 'New York'
}
console.log(myCity)
myCity.country = 'USA'
console.log(myCity)
удаление свойств объекта
delete оператор

const myCity = {
    city: 'New York'
}
myCity.country = 'USA'
myCity.popular = true
console.log(myCity)
delete myCity.popular
console.log(myCity)
Доступ к значению свойства с использованием скобок

const myCity = {
    city: 'New York'
}
myCity['popular'] = true
console.log(myCity)
const countryPropertyName = 'country'
myCity[countryPropertyName] = 'USA'
console.log(myCity)
в квадратных скобках можно использовать любое выражение javascript
вложенные свойства:
const myCity = {
    city: 'Novosibirsk',
    info: {
        isPopular: true,
        country: 'Russia'
    }
}
console.log(myCity.info.isPopular)
delete myCity.info['isPopular']
console.log(myCity)
Использвание переменных

const name = 'Vova'
const postsQty = 23
const userProfile = {
    name,
    postsQty,
    hasSignedAgreement: false
}
console.log(userProfile)