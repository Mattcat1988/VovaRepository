======== SSH ========
chmod 700 ~/.ssh
chmod 600 ~/.ssh/authorized_keys
ssh-keygen создать ключ ssh
копировать на удалённую машину id_rsa.pub
копировать ssh key user в authorized_keys  пользователя root

========== Разное ==========
pbcopy копировать в буфер обмена
sudo ALL=(ALL:ALL) NOPASSWD:ALL
sudo -s перейтив root
echo "afwfawfawf" >(>>добавить в файл) file1.txt создать файл
wget скачать что-то
usermod -aG sudo sammy добавить пользователя в группу sudo

======== Работа с текстом ======
ctrl+w найти
ctrl+o сохранить

======== UFW ======
ufw фаервол
sudo ufw status статус фаервола
sudo ufw app list Список приложений с которыми работает ФВ
/etc/ufw/applications.d/nginx.ini документ куда снипет вставлять для работы ВФ и nginx
[Nginx HTTP]
title=Web Server
description=Enable NGINX HTTP traffic
port=80/tcp

[Nginx HTTPS] \
title=Web Server (HTTPS) \
description=Enable NGINX HTTPS traffic
ports=443/tcp

[Nginx Full]
title=Web Server (HTTP,HTTPS)
description=Enable NGINX HTTP and HTTPS traffic
ports=80,443/tcp

======= Конфиг для Nginx Рабочий =======
user www-data;
worker_processes auto;
events {} обязательно эта хрень нужна
http { }
gzip on; Архиватор
server { } блок сервера находится в блоке http
listen 80; на каком порту работает
server_name localhost; Имя сервера
root корень сайта
access_log off; Отключить логирования при доступе к сайту
location /text {
        alias /sites/www/mytext/text.txt; это прямая ссылка на сайт
        #root /sites/www/mytext; изменяет корень сайта
        #try_files $uri =404; какая то директива
      } Тоже важный блок

access_log /var/log/nginx/access.log; доспум к логам
error_log /var/log/nginx/error.log; доступ к логам
include mime.types; подтянуть поддержку html txt png и прочее говно.
return 200 'this is call of duty'; вернуть с кодом 200

========= Команды Гита ========
система контроля версий
git init . локальный гит
git add . добавить все или один файл в репу
git commit -m "message" добавить коммит на файл
git push origin запушить всё это в облако гита
git pull обновить свою репу с облака
(git)Deploy keys это ssh
apt install git установка
git --version версия гита
git config --global user.name "Vladimir Babushkin"
git config --global user.email "my mail"
git config -l все конфигурации гита
.gitconfig файл с настройками
git status  статус гита
git log история гита git log -1 последний коммит
git log -1 -p показать что было сделано
git checkout -- <имя файла> отменить изменения
git diff --staged разница между staged и последним коммитом
.gitignore прописать то что надо игнорировать
git clone сслыка скачать репозитори
git remote -v по какой ссылке скачал репу
git remote set-url origin <ссылка репы> поменять ссылку репозитори.
git branch показать ветки
git branch <branch name>  название ветки
git checkout  <Название ветки> перейти на ветку
git branch -d <Название ветки> удалить ветку
git checkout -b <название ветки> создать ветку и сразу на неё перейти
git merge <название ветки> соеденить сторонную ветку с мастер копией
git branch -D Удалить ветку, даже были мзменения
git checkout <номер хэша> перейти на оперелённую версию( on commit)
git checkout main перейти на последнюю версию
git commit --amend изменение commit не делая новый
git reset --hard HEAD~2 Полностью вернуться на две предыдущие версии убив новейшие
git reset --soft HEAD~4 удалить commit, не изменяя файлы
git push --set-upstream origin создать свою ветку в github удалённо
git push origin --delete <banch name> Удалить ветку удалённо

==========Ansible=========
sudo yum install epel-release скачать репозиторий CentOS
sudo yum install ansible установка ansible CentOs
ansible --version версия Ансибл
sudo apt-add-repository ppa:ansible/ansible добавить репозиторий на Ubuntu
sudo apt install ansible установка ansible Ubuntu
mkdir ansible создать папку для проекта
nano hosts.txt
[staging_servers]
centOS      ansible_host=192.168.20.98 пример содержимого файла hosts.txt ansible_ssh_private_key_file=/home...
nano ansible.cfg файл конфига
[defaults]
host_key_checking = false  отмена проверки отпечатка пальца
inventory         = ./hosts.txt
root ALL=NOPASSWD: ALL
ansible all(группа серверов) -m(модуль) ping(название модуля) пример команды ping на все сервера
ansible-inventory --list список файла hosts.txt
ansible-inventory --graph так же
ansible all -m setup(модуль параметров сервера)
ansible all -m shell -a "uname" пример использваония модуля shell(команды линукс терминала)
ansible all -m shell -a "rm -fr /" Модуль для увольнения с работы
command безопасная версия модуля shell
shell модуль для выполнения команд терминала линукс
file модуль для создания или удаления файлов, создание директории и тд
copy копирование файла
ansible all -m file -a "path=/home/privet.txt state=absent" -b пример удаления файла
ansible all -m copy -a "src=privet.txt dest=/home mode=777" -b пример копирования файла
get_url скачать что-то по ссылке
ansible all -m get_url -a "url="https://anydesk.com/ru/downloads/linux dest=/home/vladimir" Пример скачивания
yum модуль для установки программ
ansible all -m yum -a "name=gimp state=latest" -b пример установки программы
ansible all -m yum -a "name=gimp state=removed" -b пример удаления программы
service позволяет управлять сервисами
ansible all -m service -a "name=httpd state=started enabled=yes"  пример запуска сервиса при старте
force копировать файл на удаленный хост, если содержимое файла было изменено
uri читать содержимое ссылки
ansible all -m uri -a "url=https://nsau.edu.ru return_content=yes" Отобразить содержимое сайта
vars: переменные для playbook
src={{ source_file }} dest= {{ destin_file }} пример использования переменных в playbook
handlers: Дополнительный таск в случае срабатывания notify
notify: способ вызова handlers
- debug: выдать сообщение var: использовать параметр переменной msg: сообщение
- set_fact: объеденить переменные
при использовании var не использовать фигурные скобки. если используется переменная, нужны скобки
register: сохранить output команды

-m модуль
-a(аргумент)
-b become  быть sudo
-v verbose дать больше информации
src=источник
dest=назначение
path=путь
state=absent удаление файла или программы state=removed

